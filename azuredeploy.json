{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "EngineerAlias": {
      "type": "string",
      "defaultValue": "MsAlias",
      "metadata": {
        "description": "Engineer MS Alias"
      }
    }
  },
  "variables": {
    "webAppRG": "[resourceGroup().name]",
    "appServicePlanName1": "[concat('ASP111-', parameters('EngineerAlias'))]",
    "webAppName1": "[concat('APP111-', parameters('EngineerAlias'))]",
    "location1": "EastUS",
    "appServicePlanName2": "[concat('ASP222-', parameters('EngineerAlias'))]",
    "location2": "WestUS",
    "webAppName2": "[concat('APP222-', parameters('EngineerAlias'))]",

    "vnetName": "[concat('VNet-', parameters('EngineerAlias'))]",
    "vnet1AddressPrefix": "10.201.0.0/16",
    "appGWsubnetName": "AppGWsubnet",
    "appGWsubnetAddress": "10.201.0.0/24",
    "subnet1Name": "default",
    "subnet1AddressPrefix": "10.201.1.0/24",

    "publicIPAddress1Name": "[concat('appGWpublicIP-', parameters('EngineerAlias'))]",
    "appGatewayName": "[concat('AppGW-', parameters('EngineerAlias'))]",
    "AppGWsubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('appGWsubnetName'))]",
    "applicationGatewayId": "[resourceId('Microsoft.Network/applicationGateways', variables('appGatewayName'))]",
    //"FrontEndIpId": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('appGatewayName'), 'appGwPublicFrontendIP')]",
    "FrontEndIpId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationGateways/',  variables('appGatewayName'), '/frontendIPConfigurations/appGwPublicFrontendIP')]",

    "frontDoorName": "[concat('FDoor-', parameters('EngineerAlias'))]",
    "backendAddress": "[concat('ASP222-', parameters('EngineerAlias'), 'azurewebsites.net')]"
  },

  "resources": [
    {
      "name": "[variables('vnetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-12-01",
      "location": "[variables('location1')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnet1AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('appGWsubnetName')]",
            "properties": {
              "addressPrefix": "[variables('appGWsubnetAddress')]"
            }
          },
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1AddressPrefix')]"
            }
          }
        ]
      }
    },

    {
      "name": "[variables('appServicePlanName1')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "location": "[variables('location1')]",
      "sku": {
        "name": "S1",
        "capacity": 0
      },
      "kind": "app"
    },

    {
      "name": "[variables('webAppName1')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "location": "[variables('location1')]",
      "kind": "app",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName1'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName1'))]"
      }
    },

    {
      "name": "[variables('appServicePlanName2')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "location": "[variables('location2')]",
      "sku": {
        "name": "S1",
        "capacity": 0
      },
      "kind": "app"
    },

    {
      "name": "[variables('webAppName2')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "location": "[variables('location2')]",
      "kind": "app",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName2'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName2'))]"
      }
    },
    //---Application Gateway---------------------------------------------------------------------------
    {
      "name": "[variables('publicIPAddress1Name')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "sku": { "name": "Standard" },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4"
      }
    },
    {
      "apiVersion": "2020-05-01",
      "name": "[variables('appGatewayName')]",
      "type": "Microsoft.Network/applicationGateways",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddress1Name'))]"
      ],
      "properties": {
        "sku": {
          "name": "Standard_V2",
          "tier": "Standard_v2",
          "capacity": 2
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('appGWsubnetName'))]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGwPublicFrontendIP",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddress1Name'))]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "frontendPort",
            "properties": {
              "Port": 80
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "AppBackendPool",
            "properties": {
              "backendAddresses": []
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "backendHttpSettings",
            "properties": {
              "Port": 80,
              "Protocol": "Http",
              "CookieBasedAffinity": "Disabled",
              "requestTimeout": 20
            }
          }
        ],
        "httpListeners": [
          {
            "name": "httpListener",
            "properties": {
              "FrontendIpConfiguration": {
                "id": "[variables('FrontEndIpId')]"
              },
              "FrontendPort": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/applicationGateways/frontendPorts', variables('appGatewayName'), 'frontendPort')]"
              },
              "Protocol": "Http"
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "appRuleBasic",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayId'), '/httpListeners/httpListener')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/AppBackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/backendHttpSettings')]"
              }
            }
          }
        ],
        "enableHttp2": false,
        "sslCertificates": [],
        "probes": []
      }
    },
    //---Front Door-----------------------------------------------------------------------------------------
    {
      "type": "Microsoft.Network/frontDoors",
      "apiVersion": "2020-01-01",
      "name": "[variables('frontDoorName')]",
      "location": "global",
      "properties": {
        "routingRules": [
          {
            "name": "routingRule1",
            "properties": {
              "frontendEndpoints": [
                {
                  "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', variables('frontDoorName'), 'frontendEndpoint1')]"
                }
              ],
              "acceptedProtocols": [
                "Http",
                "Https"
              ],
              "patternsToMatch": [
                "/*"
              ],
              "routeConfiguration": {
                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                "forwardingProtocol": "MatchRequest",
                "backendPool": {
                  "id": "[resourceId('Microsoft.Network/frontDoors/backendPools', variables('frontDoorName'), 'backendPool1')]"
                }
              },
              "enabledState": "Enabled"
            }
          }
        ],
        "healthProbeSettings": [
          {
            "name": "healthProbeSettings1",
            "properties": {
              "path": "/",
              "protocol": "Http",
              "intervalInSeconds": 120
            }
          }
        ],
        "loadBalancingSettings": [
          {
            "name": "loadBalancingSettings1",
            "properties": {
              "sampleSize": 4,
              "successfulSamplesRequired": 2
            }
          }
        ],
        "backendPools": [
          {
            "name": "backendPool1",
            "properties": {
              "backends": [
                {
                  "address": "[variables('backendAddress')]",
                  "backendHostHeader": "[variables('backendAddress')]",
                  "httpPort": 80,
                  "httpsPort": 443,
                  "weight": 50,
                  "priority": 1,
                  "enabledState": "Enabled"
                }
              ],
              "loadBalancingSettings": {
                "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', variables('frontDoorName'), 'loadBalancingSettings1')]"
              },
              "healthProbeSettings": {
                "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', variables('frontDoorName'), 'healthProbeSettings1')]"
              }
            }
          }
        ],
        "frontendEndpoints": [
          {
            "name": "frontendEndpoint1",
            "properties": {
              "hostName": "[concat(variables('frontDoorName'), '.azurefd.net')]",
              "sessionAffinityEnabledState": "Disabled"
            }
          }
        ],
        "enabledState": "Enabled"
      }
    }
  ],
  "outputs": {}
}

{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.201.0.0/16",
      "metadata": {
        "description": "Address prefix for vnet"
      }
    },    
    "GatewaySubnetPrefix": {
      "type": "string",
      "defaultValue": "10.201.0.0/24",
      "metadata": {
        "description": "Address range used by Gateway subnet"
      }
    },
    "EngineerAlias": {
      "type": "string",
      "defaultValue": "Your Alias or Initials",
      "metadata": {
        "description": "Your Microsoft alias or your initials. Must be less than 15 characters."
      }
    }
  },
  "variables": {
    "webAppRG": "[resourceGroup().name]",
    "webApp-prod-URL": "https://github.com/amymcel/AppService.Config.Specialist.OptimizeTrafficTestApp",
    "location1": "EastUS",
    "location2": "WestUS",
    "location3": "CentralUS",
    "appServicePlanName1": "[concat('AspEast-', parameters('EngineerAlias'))]",
    "appServicePlanName2": "[concat('AspWest-', parameters('EngineerAlias'))]",
    "appServicePlanName3": "[concat('AspCentral-', parameters('EngineerAlias'))]",
    "webAppName1": "[concat('APP111-', parameters('EngineerAlias'))]",
    "webAppName2": "[concat('APP222-', parameters('EngineerAlias'))]",
    "webAppName3": "[concat('APP333-', parameters('EngineerAlias'))]",
    "webAppName4": "[concat('APP444-', parameters('EngineerAlias'))]",
    "webAppName5": "[concat('APP555-', parameters('EngineerAlias'))]",

    "vnetName": "[concat('VNet-', parameters('EngineerAlias'))]",
    "appGWsubnetName": "AppGW",

    "publicIPAddress1Name": "[concat('appGWpublicIP-', parameters('EngineerAlias'))]",
    "publicDnsName": "[concat('appgwpub', parameters('EngineerAlias'))]",
    "trafficManagerName": "[concat('TM-', parameters('EngineerAlias'))]",
    "appGatewayName": "[concat('AppGW-', parameters('EngineerAlias'))]",
    "AppGWsubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('appGWsubnetName'))]",
    "applicationGatewayId": "[resourceId('Microsoft.Network/applicationGateways', variables('appGatewayName'))]",
    //"FrontEndIpId": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('appGatewayName'), 'appGwPublicFrontendIP')]",
    "FrontEndIpId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationGateways/',  variables('appGatewayName'), '/frontendIPConfigurations/appGwPublicFrontendIP')]",

    "frontDoorName": "[concat('FDoor-', parameters('EngineerAlias'))]",
    "backendAddress": "[concat('APP444-', parameters('EngineerAlias'), '.azurewebsites.net')]"
  },
  //---Virtual Network ----------------------------------------------------------------
  "resources": [
    {
      "name": "[variables('vnetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-05-01",
      "location": "[variables('location3')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('appGWsubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('GatewaySubnetPrefix')]"
            }
          }
        ]
      }
    },
    //---App Service Plans and Web Apps -----------------------------------------------
    {
      "name": "[variables('appServicePlanName1')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "location": "[variables('location1')]",
      "sku": {
        "name": "S1",
        "capacity": 0
      },
      "kind": "app"
    },
    {
      "name": "[variables('appServicePlanName2')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "location": "[variables('location2')]",
      "sku": {
        "name": "S1",
        "capacity": 0
      },
      "kind": "app"
    },
    {
      "name": "[variables('appServicePlanName3')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "location": "[variables('location3')]",
      "sku": {
        "name": "S1",
        "capacity": 0
      },
      "kind": "app"
    },
    {
      "name": "[variables('webAppName1')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "location": "[variables('location1')]",
      "kind": "app",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName1'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName1'))]",
        "httpsOnly": false,
        "clientAffinityEnabled": false
      },
      "resources": [
        {
          "name": "web",
          "type": "sourcecontrols",
          "apiVersion": "2018-11-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('webAppName1'))]"
          ],
          "properties": {
            "RepoUrl": "[variables('webApp-prod-URL')]",
            "branch": "main",
            "IsManualIntegration": true
          }
        }
      ]
    },
    {
      "name": "[variables('webAppName2')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "location": "[variables('location2')]",
      "kind": "app",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName2'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName2'))]",
        "httpsOnly": false,
        "clientAffinityEnabled": false
      },
      "resources": [
        {
          "name": "web",
          "type": "sourcecontrols",
          "apiVersion": "2018-11-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('webAppName2'))]"
          ],
          "properties": {
            "RepoUrl": "[variables('webApp-prod-URL')]",
            "branch": "main",
            "IsManualIntegration": true
          }
        }
      ]
    },
    {
      "name": "[variables('webAppName3')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "location": "[variables('location3')]",
      "kind": "app",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName3'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName3'))]",
        "httpsOnly": false,
        "clientAffinityEnabled": false
      },
      "resources": [
        {
          "name": "web",
          "type": "sourcecontrols",
          "apiVersion": "2018-11-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('webAppName3'))]"
          ],
          "properties": {
            "RepoUrl": "[variables('webApp-prod-URL')]",
            "branch": "main",
            "IsManualIntegration": true
          }
        }
      ]
    },
    {
      "name": "[variables('webAppName4')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "location": "[variables('location1')]",
      "kind": "app",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName1'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName1'))]",
        "httpsOnly": false,
        "clientAffinityEnabled": false
      },
      "resources": [
        {
          "name": "web",
          "type": "sourcecontrols",
          "apiVersion": "2018-11-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('webAppName4'))]"
          ],
          "properties": {
            "RepoUrl": "[variables('webApp-prod-URL')]",
            "branch": "main",
            "IsManualIntegration": true
          }
        }
      ]
    },
    {
      "name": "[variables('webAppName5')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "location": "[variables('location2')]",
      "kind": "app",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName2'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName2'))]",
        "httpsOnly": false,
        "clientAffinityEnabled": false
      },
      "resources": [
        {
          "name": "web",
          "type": "sourcecontrols",
          "apiVersion": "2018-11-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('webAppName5'))]"
          ],
          "properties": {
            "RepoUrl": "[variables('webApp-prod-URL')]",
            "branch": "main",
            "IsManualIntegration": true
          }
        }
      ]
    },
  
    //---Traffic Manager ------------------------------------------------------------------------------

      //---Application Gateway---------------------------------------------------------------------------
      {
        "name": "[variables('publicIPAddress1Name')]",
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2020-05-01",
        "location": "[variables('location3')]",
        "sku": { "name": "Standard" },
        "properties": {
          "publicIPAllocationMethod": "Static",
          "publicIPAddressVersion": "IPv4",
          "dnsSettings": {
            "domainNameLabel": "[variables('publicDnsName')]",
            "fqdn": "[concat(variables('publicDnsName'), '.', variables('location3'), '.cloudapp.azure.com')]"
          }
        }
      },
      {
        "apiVersion": "2020-05-01",
        "name": "[variables('appGatewayName')]",
        "type": "Microsoft.Network/applicationGateways",
        "location": "[variables('location3')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
          "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddress1Name'))]"
        ],
        "properties": {
          "sku": {
            "name": "Standard_v2",
            "tier": "Standard_v2",
            "capacity": 2
          },
          "gatewayIPConfigurations": [
            {
              "name": "appGatewayIpConfig",
              "properties": {
                "subnet": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('appGWsubnetName'))]"
                }
              }
            }
          ],
          "frontendIPConfigurations": [
            {
              "name": "appGwPublicFrontendIP",
              "properties": {
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddress1Name'))]"
                }
              }
            }
          ],
          "frontendPorts": [
            {
              "name": "frontendPort",
              "properties": {
                "Port": 80
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "appBackend",
              "properties": {
                "backendAddresses": []
              }
            }
          ],
          "backendHttpSettingsCollection": [
            {
              "name": "80Settings",
              "properties": {
                "Port": 80,
                "Protocol": "Http",
                "CookieBasedAffinity": "Disabled",
                "requestTimeout": 20
              }
            }
          ],
          "httpListeners": [
            {
              "name": "80Listener",
              "properties": {
                "FrontendIpConfiguration": {
                  "id": "[variables('FrontEndIpId')]"
                },
                "FrontendPort": {
                  "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/applicationGateways/frontendPorts', variables('appGatewayName'), 'frontendPort')]"
                },
                "Protocol": "Http"
              }
            }
          ],
          "requestRoutingRules": [
            {
              "Name": "80Rule",
              "properties": {
                "RuleType": "Basic",
                "httpListener": {
                  "id": "[concat(variables('applicationGatewayId'), '/httpListeners/80Listener')]"
                },
                "backendAddressPool": {
                  "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/appBackend')]"
                },
                "backendHttpSettings": {
                  "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/80Settings')]"
                }
              }
            }
          ],
          "enableHttp2": false,
          "sslCertificates": [],
          "probes": []
        }
      },
      //---Front Door-----------------------------------------------------------------------------------------
      {
        "type": "Microsoft.Network/frontDoors",
        "apiVersion": "2020-01-01",
        "name": "[variables('frontDoorName')]",
        "location": "global",
        "properties": {
          "routingRules": [
            {
              "name": "routingRule1",
              "properties": {
                "frontendEndpoints": [
                  {
                    "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', variables('frontDoorName'), 'frontendEndpoint1')]"
                  }
                ],
                "acceptedProtocols": [
                  "Http"
                ],
                "patternsToMatch": [
                  "/*"
                ],
                "routeConfiguration": {
                  "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                  "forwardingProtocol": "HttpOnly",
                  "backendPool": {
                    "id": "[resourceId('Microsoft.Network/frontDoors/backendPools', variables('frontDoorName'), 'backendPool1')]"
                  }
                },
                "enabledState": "Enabled"
              }
            }
          ],
          "healthProbeSettings": [
            {
              "name": "healthProbeSettings1",
              "properties": {
                "path": "/",
                "protocol": "Http",
                "intervalInSeconds": 120
              }
            }
          ],
          "loadBalancingSettings": [
            {
              "name": "loadBalancingSettings1",
              "properties": {
                "sampleSize": 4,
                "successfulSamplesRequired": 2
              }
            }
          ],
          "backendPools": [
            {
              "name": "backendPool1",
              "properties": {
                "backends": [
                  {
                    "address": "[variables('backendAddress')]",
                    "backendHostHeader": "[variables('backendAddress')]",
                    "httpPort": 80,
                    "httpsPort": 443,
                    "weight": 50,
                    "priority": 1,
                    "enabledState": "Enabled"
                  }
                ],
                "loadBalancingSettings": {
                  "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', variables('frontDoorName'), 'loadBalancingSettings1')]"
                },
                "healthProbeSettings": {
                  "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', variables('frontDoorName'), 'healthProbeSettings1')]"
                }
              }
            }
          ],
          "frontendEndpoints": [
            {
              "name": "frontendEndpoint1",
              "properties": {
                "hostName": "[concat(variables('frontDoorName'), '.azurefd.net')]",
                "sessionAffinityEnabledState": "Disabled"
              }
            }
          ],
          "enabledState": "Enabled"
        }
      }
  ],
  "outputs": {}
}
